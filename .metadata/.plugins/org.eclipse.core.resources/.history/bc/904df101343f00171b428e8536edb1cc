package managementsoftware;

import java.io.*;
import java.util.*;
import java.lang.*;
class StackException extends RuntimeException
{
	public StackException (String message)
	{
		super(message);
		}
}
public class Stack {
	private int top;
	private int[] storage;
	Stack(int capacity)
	{
		if(capacity <0)
		{
			throw new IllegalArgumentException("Stacks capacity must be positive");
		}
		storage = new int[capacity];
		top = -1;
		
	}
	void push(int value)
	{
		if(top == storage.length)
		{
			throw new StackException("Stacks been overflow");
		}
		top ++;
		storage[top] = value;
		
	}
	void pop ()
	{
		if(top == -1)
		{
			throw new StackException("Stack is Empty");
			
		}
		top --;
	}
	int peek()
	{
		if(top == -1){
			throw new StackException("Stack is empty");
			
		}
		
		
		return storage[top];
	}
	boolean isEmpty()
	{
		return top ==-1;
	}
	
	

}
